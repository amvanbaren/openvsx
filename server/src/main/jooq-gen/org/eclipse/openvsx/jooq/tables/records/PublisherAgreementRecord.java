/*
 * This file is generated by jOOQ.
 */
package org.eclipse.openvsx.jooq.tables.records;


import java.time.LocalDateTime;

import org.eclipse.openvsx.jooq.tables.PublisherAgreement;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PublisherAgreementRecord extends UpdatableRecordImpl<PublisherAgreementRecord> implements Record7<Long, String, Boolean, String, String, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.publisher_agreement.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.publisher_agreement.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.publisher_agreement.user_id</code>.
     */
    public void setUserId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.publisher_agreement.user_id</code>.
     */
    public String getUserId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.publisher_agreement.active</code>.
     */
    public void setActive(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.publisher_agreement.active</code>.
     */
    public Boolean getActive() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>public.publisher_agreement.document_id</code>.
     */
    public void setDocumentId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.publisher_agreement.document_id</code>.
     */
    public String getDocumentId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.publisher_agreement.version</code>.
     */
    public void setVersion(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.publisher_agreement.version</code>.
     */
    public String getVersion() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.publisher_agreement.person_id</code>.
     */
    public void setPersonId(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.publisher_agreement.person_id</code>.
     */
    public String getPersonId() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.publisher_agreement.timestamp</code>.
     */
    public void setTimestamp(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.publisher_agreement.timestamp</code>.
     */
    public LocalDateTime getTimestamp() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, String, Boolean, String, String, String, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, String, Boolean, String, String, String, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PublisherAgreement.PUBLISHER_AGREEMENT.ID;
    }

    @Override
    public Field<String> field2() {
        return PublisherAgreement.PUBLISHER_AGREEMENT.USER_ID;
    }

    @Override
    public Field<Boolean> field3() {
        return PublisherAgreement.PUBLISHER_AGREEMENT.ACTIVE;
    }

    @Override
    public Field<String> field4() {
        return PublisherAgreement.PUBLISHER_AGREEMENT.DOCUMENT_ID;
    }

    @Override
    public Field<String> field5() {
        return PublisherAgreement.PUBLISHER_AGREEMENT.VERSION;
    }

    @Override
    public Field<String> field6() {
        return PublisherAgreement.PUBLISHER_AGREEMENT.PERSON_ID;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return PublisherAgreement.PUBLISHER_AGREEMENT.TIMESTAMP;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUserId();
    }

    @Override
    public Boolean component3() {
        return getActive();
    }

    @Override
    public String component4() {
        return getDocumentId();
    }

    @Override
    public String component5() {
        return getVersion();
    }

    @Override
    public String component6() {
        return getPersonId();
    }

    @Override
    public LocalDateTime component7() {
        return getTimestamp();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUserId();
    }

    @Override
    public Boolean value3() {
        return getActive();
    }

    @Override
    public String value4() {
        return getDocumentId();
    }

    @Override
    public String value5() {
        return getVersion();
    }

    @Override
    public String value6() {
        return getPersonId();
    }

    @Override
    public LocalDateTime value7() {
        return getTimestamp();
    }

    @Override
    public PublisherAgreementRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PublisherAgreementRecord value2(String value) {
        setUserId(value);
        return this;
    }

    @Override
    public PublisherAgreementRecord value3(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public PublisherAgreementRecord value4(String value) {
        setDocumentId(value);
        return this;
    }

    @Override
    public PublisherAgreementRecord value5(String value) {
        setVersion(value);
        return this;
    }

    @Override
    public PublisherAgreementRecord value6(String value) {
        setPersonId(value);
        return this;
    }

    @Override
    public PublisherAgreementRecord value7(LocalDateTime value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public PublisherAgreementRecord values(Long value1, String value2, Boolean value3, String value4, String value5, String value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PublisherAgreementRecord
     */
    public PublisherAgreementRecord() {
        super(PublisherAgreement.PUBLISHER_AGREEMENT);
    }

    /**
     * Create a detached, initialised PublisherAgreementRecord
     */
    public PublisherAgreementRecord(Long id, String userId, Boolean active, String documentId, String version, String personId, LocalDateTime timestamp) {
        super(PublisherAgreement.PUBLISHER_AGREEMENT);

        setId(id);
        setUserId(userId);
        setActive(active);
        setDocumentId(documentId);
        setVersion(version);
        setPersonId(personId);
        setTimestamp(timestamp);
    }
}
